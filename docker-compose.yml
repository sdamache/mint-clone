services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    env_file:
      - ./.env

  app:
    build:
      context: .
      dockerfile: Dockerfile
    command: python backend/app.py
    ports:
      - "5000:5000"
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/transactions')"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/transactions
    env_file:
      - ./.env

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: transactions
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
